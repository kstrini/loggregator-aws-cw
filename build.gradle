apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'spring-boot'

version =  '1.0.0'

buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://repo.spring.io/release' }
        maven { url 'http://repo.spring.io/snapshot' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
archivesBaseName = "spring-boot-reactor-example"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'http://repo.spring.io/release' }
    maven { url 'http://repo.spring.io/snapshot' }
}

springBoot {
    backupSource = false
}

dependencies {
    // boot
	compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-test")

    // cloudfoundry client
    compile("org.cloudfoundry:cloudfoundry-client-spring:2.0.0.BUILD-SNAPSHOT")
    compile("org.cloudfoundry:cloudfoundry-operations:2.0.0.BUILD-SNAPSHOT")

    // reactor
    compile("org.projectreactor.spring:reactor-spring-context:1.1.3.RELEASE")
    compile("io.projectreactor:reactor-core:2.5.0.M2")

    // RxJava
    compile("io.reactivex:rxjava:1.1.1")

    // snotel
    compile("com.github.cloudfoundry-community:snotel:0.3.M3")

    // aws
    compile("com.google.inject:guice:4.0")
    compile("com.amazonaws:aws-java-sdk:1.10.59")
    compile("com.amazonaws:aws-java-sdk-core:1.10.59")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}